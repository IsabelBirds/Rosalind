#Problem
#After identifying the exons and introns of an RNA string, we only need to delete the introns and concatenate 
# the exons to form a new string ready for translation.

#Given: A DNA string s (of length at most 1 kbp) and a collection of substrings of s acting as introns. 
# All strings are given in FASTA format.

#Return: A protein string resulting from transcribing and translating the exons of s. 
# (Note: Only one solution will exist for the dataset provided.)#

conversion = """TTT F      CTT L      ATT I      GTT V
TTC F      CTC L      ATC I      GTC V
TTA L      CTA L      ATA I      GTA V
TTG L      CTG L      ATG M      GTG V
TCT S      CCT P      ACT T      GCT A
TCC S      CCC P      ACC T      GCC A
TCA S      CCA P      ACA T      GCA A
TCG S      CCG P      ACG T      GCG A
TAT Y      CAT H      AAT N      GAT D
TAC Y      CAC H      AAC N      GAC D
TAA Stop   CAA Q      AAA K      GAA E
TAG Stop   CAG Q      AAG K      GAG E
TGT C      CGT R      AGT S      GGT G
TGC C      CGC R      AGC S      GGC G
TGA Stop   CGA R      AGA R      GGA G
TGG W      CGG R      AGG R      GGG G"""

conversion =  conversion.split()
conversion = dict(zip(conversion[0::2], conversion[1::2]))

string = '''ATGTTCTGTAGATTTGATTGATAGTGGTCACCCACATAGGTCTGGCATGTCAAGCTTGTC
TGCATCGGAGGATGAGCCCAAGCAATTTTCTTCGTCCCCAGTCGGCAACCTATATGGTGC
CTGACCTGTAGAATCACAGCACACCACGGACTCCTCCACCGAGCGTTAACTCTGTGGAGC
GGTCCGACGACTTTTATACGCCTATTGTGTACACGGTCGCTCTCGCGGAGTTGGGCACAC
CATGGGCCTTTCAGCAGCTACGGACACACTGCCGGCTGCAAGACGAGGGGCTGGTGCACA
ATGGACCCAATTTGCGGCTCTCTTACCGGTCCAGGCAGAAGCTCACCAGTATTGGATACT
ATGCTAACTCCATCGATCCGCCCCCCCCACCATAACAGCGCCCCGCACCAAACGGGATTC
CCCTTGTTCAACGTATCATTGTTCGAAAAGTCCGGAAGATTGTTCTGCTAGCCCTCTAGG
GGTCGCGCTTTAAGTGGCATCCATCTCGCTGAAGTGAGAGTAACCTGTAGCCGCCTCAGC
ACTCAGGCGCCAGAAACGAGATATAGTGTCCACTTCCGGAAATCTTATCGGGCGGACTGG
AAGATACTCTTATACCGGCGGAAGTCTGCCCCGTGCCCTTGGGTCCGTAGTTGTTGAACC
TCACTGGTCCCGGCCCAACGGGTTAGTCTCAAGATACCTTATCGTCATTGGCTTGCCCGG
GACTCACGTATCACACTGTCAGGTACCCTATGCTTCCGGAAAGTGGTTTTATAGGACATA
GCATAGCTTGGTGTGTGCCCGTCTTGGGAACTAGCGTCGTGATCAACTATTTACTCAGAC
TAATGCGAGCACAAGATGTCGCACTCCGGAACTCTTGGCATAGAGTTGCCCATCTCCGTC
GGACTTCGAATTATTCACATTACACAGCCTAACTATAAGGCTTTATAGGGCCGGGGTACC
CTACTAA'''
string = string.replace('\n','')

introns ='''>Rosalind_7469
CCGTAGTTGTTGAACCTCACTGGTCCCG
>Rosalind_1042
TTTATACGCCTATTGTGTACACGGTCGCTCTCGCGGAGTTGG
>Rosalind_4603
AGTGTCCACTTCCGGAAATCTTATCG
>Rosalind_3371
GCTCACCAGTATTGGATACTATGCTAACTCCATCGA
>Rosalind_7448
ATCAACTATTTACTCAGACTAATGCGAGCAC
>Rosalind_6114
ACTGCCGGCTGCA
>Rosalind_7624
TATCATTGTTCGAAAAGTCCGGAAGATTGTTCTGCTAGCCCTCTAGGGG
>Rosalind_3117
TCCGTCGGACTTCGAATTATTC
>Rosalind_7229
GGTGCCTGACCTGTAGAATC
>Rosalind_1569
TGATAGTGGTCACCCACATAGGTCTGGCATGTCAAGCTTG
>Rosalind_4710
CGCTGAAGTGAGAGTAACCTGTAGCCGC
>Rosalind_3907
ATCACACTGTCAGGTACCCTATGCTTCCGGAA'''.split()

introns = dict(zip(introns[0::2], introns[1::2]))

def intron_out(rna,dict,conv):
    protein = ''
    for value in dict.values():
        rna = rna.replace(value,'')
    for i in range(0,len(rna)-3,3):
        protein += conv[rna[i:i+3]]
    return(protein)

protein = intron_out(string,introns,conversion)

print(protein)
