#Problem
#A string is simply an ordered collection of symbols selected from some alphabet and formed into a word; 
# the length of a string is the number of symbols that it contains.

#An example of a length 21 DNA string (whose alphabet contains the symbols 'A', 'C', 'G', and 'T') is 
# "ATGCTTCAGAAAGGTCTTACG."

#Given: A DNA string s of length at most 1000 nt.
#Return: Four integers (separated by spaces) counting the respective number of times that the symbols 'A', 'C', 'G', 
# and 'T' occur in s.

dna_string = 'TTATACGGTCTTTCAGGGATTTGTCTGTGTTTACTCACTTTTGTATGTTCGGGAAACTAAGACACTAACTAAAGGGTTGCGCGCTAAGAATGAATTGGGGTTGCTTCGCCAAGAGTACGGTTCACTTCGAGCTCCTAAAAATCCTTTCACGACGTTTAACGCCTCTTAGGAGGTAATAGGGCTTTAACTAAAGCAGTACCGTAAGGCGATATTGGCTGCTACAAGTTAGGGGCGGTAGCTGCTGTAGGTAAGGCCAGACTTGAAGGTTCCTAGCCCCTGCTTCGAAAATTAGTGCTCTCTGGCCTTCAAAAACGATTTGCTATAAACAAACACCTGTGTCGGAGCCTGAACGTTCGGTAACAGGACGCCGGGTTGAGTGTCCGTCTGTCACCGTGGTGCCCCGCTCTCTTCTGGTATCGGTTGGTAGCCTTCGTGAGTGTAAATATTTGCGTATGTACGATCCAACTCAGCAACCCGCCGGTTACTGGGAGACACGGAACGGATTTATTCTCCCTTTTAACTCTCGGTGTCGCTGGCCGGTTTATATCCACGATAAATAACATAGGAATCGCTGACTCACTCGCAGGACGACCTCCGACATCAAGGTATGAGGTGATACGGCCGCTAGCCGCTGACGCGAACTTGCCAAAAATATCCCCTTCGCTTTTCAAACCCGGGATTCCCACTACGTTGTTGCTATAGGTCTAAACAAAAGGACCTGGTGCTGAGAGCGCTCTCCGATATGAGCAAGGACCTCTCTTGTCAATTGAGGAAACGCACTAGGACTTGACAAATATAAATATGGGTAGCGGACCGACACCATATAAAGCTAGCTATGTGGCCGTACA'

d = {'A':0, 'C':0, 'G':0,'T':0}

for i in range(0, len(dna_string)):
    if dna_string[i] in d:
        d[dna_string[i]] +=  1
    else:
        d[dna_string[i]] = 1

for key, value in d.items():
    print(value)

#Solution from site

def dna_content(s):
    return s.count("A"), s.count("G"), s.count("C"), s.count("T")

print(dna_content(dna_string))