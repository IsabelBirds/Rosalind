#Problem

#Given: Two DNA strings s and t (each of length at most 1 kbp).
#Return: All locations of t as a substring of s.

s = 'AACGGCTTAAACGGCTATAACGGCTTTTACAACGGCTCTGCTTCGGGGGGTAAACGGCTAACGGCTAACGGCTAACGGCTAACGGCTCAACGGCTGACATAACGGCTGCGAAAACGGCTAAACGGCTGGTTATAAACGGCTTTCAACAACGGCTAACGGCTTAGCTAACGGCTCAAAACGGCTTGAACGGCTCTTTAACGGCTGGCCATAACGGCTCAAACGGCTAACGGCTTAACGGCTCAAGAACGGCTAAACGGCTGGCAACGGCTTTTACCAAACGGCTCCCTAATAACGGCTAACGGCTGTAACGGCTTTTTGTGGGAAACGGCTCTGCCGAACGGCTACAACGGCTAACGGCTCGAAACGGCTCGAACGGCTAACGGCTAACGGCTAACGGCTGGAAACGGCTAACTAACGGCTTGGCGAACGGCTAAACGGCTTGAAACGGCTTTAACGGCTTAGGAACGGCTAACGGCTAACGGCTAACGGCTAACGGCTAACGGCTTAACGGCTACTGCGATAACGGCTAACGGCTCTATAGAAACGGCTTCTAACGGCTACCAACGGCTTGCCGGTAACGGCTAACGGCTACTTTGCAACGGCTAAAACGGCTATTTCGAACGGCTACGGAACGGCTCCAACGGCTCAAACGGCTAACGGCTGAACGGCTAAATGAACGGCTCAACGGCTTAACGGCTCAAACGGCTGAACGGCTAACGGCTAAACGGCTTCCCTCAACGGCTAGGAACGGCTAACGGCTAAACGGCTTCTTAACGGCTAACGGCTGTTGATAAACGGCTGAAACGGCTCGAACGGCTTAACGGCTGAAGGAACGGCTGTAACGGCTCAACGGCTGAACGGCTAACGGCTAAAACGGCTAACGGCTAAACGGCTTAACTGAAACGGCTAACGGCTAACGGCTAACGGCTAACGGCTAACGGCTGAAGAACGGCTCGACGCAAACGGCTAACGGCT'
t = 'AACGGCTAA'

def substring_count(string,sub_str):
    if len(string) < len(sub_str):
        raise Exception("substring is longer than string ")
    start = 0
    end = len(sub_str)
    count = []
    while start < len(string):
        if sub_str == string[start:end]:
            count.append(start + 1)
        start += 1
        end += 1
    print(count)
    return(count)

substring_count(s,t)

#Solution from site

for i in range(len(s)):
    if s[i:].startswith(t):
        print (i+1)